"""
TestLink's Testplan Application Module
"""

import os
import logging
from lxk_testrunner import EXT_PROJ_TESTLINK
from lxk_testrunner.robot_ import project
from lxk_testrunner.testlink_ import testplan

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

def get_testcases(testplan_name, testproject, execution_type, workspace):
    """
    Get testcases from a Testplan in TestLink.
    """
    LOGGER.debug(testplan_name)
    LOGGER.debug(testproject)
    LOGGER.debug(execution_type)
    LOGGER.debug(workspace)
    testcases = []
    # normal case:
    # --testplan is not used.
    if testplan_name is None:
        return testcases

    assert isinstance(testplan_name, str), "must be {type_}".format(type_=str)
    assert isinstance(testproject, str), "must be {type_}".format(type_=str)
    assert isinstance(execution_type, str), "must be {type_}".format(type_=str)
    # query testcases from TestLink if both --testplan option is used.
    LOGGER.info(
        "Querying testcases from Testplan <%s> in TestLink...",
        testplan_name
    )

    project_name = project.read_config_value(
        EXT_PROJ_TESTLINK,
        "project-name",
        os.path.join(workspace, testproject)
    )
    LOGGER.debug(project_name)
    testcases = testplan.get_testcases(
        testplan_name=testplan_name,
        project_name=project_name,
        execution_type=execution_type
    )

    if not testcases:
        LOGGER.warning(
            "WARNING: No testcase was found. "
        )

    LOGGER.debug(testcases)
    return testcases
