""" Testrunner Workspace functions
"""

import os
import logging
import configparser
from lxk_testrunner.utils import system
from lxk_testrunner import (
    EXT_PROJ_CFG_FILENAME,
    EXT_PROJ_DIRMAP,
    EXT_PROJ_TESTLINK
)

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

def get_projects(path):
    """ Return list of paths under workspace with *.cfg (containing
    [something] section)
    """
    LOGGER.debug(path)
    assert os.path.isdir(path), "{path} does not exist!".format(path=path)
    projects = []
    _, dirs, _ = next(system.walk(
        directory=path,
        depth=0
    ))
    for dir_ in dirs:
        ext_cfg = os.path.join(path, dir_, EXT_PROJ_CFG_FILENAME)
        LOGGER.debug(ext_cfg)
        if os.path.isfile(ext_cfg):
            config = configparser.ConfigParser()
            _ = config.read(ext_cfg)
            if config.has_section(EXT_PROJ_DIRMAP) and\
               config.has_section(EXT_PROJ_TESTLINK):
                projects.append(dir_)

    LOGGER.debug(projects)
    return projects

def read_project_cfg(section, key, path):
    """ Return the value corresponding to a section-key in path/*.cfg
    """
    LOGGER.debug(key)
    LOGGER.debug(path)
    assert isinstance(key, str), "must be {type_}".format(type_=str)
    assert os.path.isdir(path), "{path} does not exist!".format(path=path)

    config = configparser.ConfigParser()
    _ = config.read(os.path.join(path, EXT_PROJ_CFG_FILENAME))
    return config[section][key]
