"""
Global Constants
"""
import os
import platform
import configparser

# platform-dependent constants
SYSTEM = platform.system()
if SYSTEM == "Linux":
    LOCATE_CMD = "which"
    PING_CMD = ["ping", "-c"]

elif SYSTEM == "Windows":
    LOCATE_CMD = "where"
    PING_CMD = ["ping", "-n"]

else:
    assert False, "{sys} not supported!".format(sys=SYSTEM)

# lxk_testrunner directories
BASE_DIR = os.path.dirname(os.path.realpath(__file__))
ROBOT_ = os.path.join(BASE_DIR, "robot_")
REQUIREMENTS_TXT = os.path.join(BASE_DIR, "requirements.txt")
TESTRUNNER_CFG = os.path.join(BASE_DIR, "project.cfg")

# read project.cfg
CONFIG = configparser.ConfigParser()
_ = CONFIG.read(TESTRUNNER_CFG)
PUBLIC_INDEX = CONFIG["LINKS"]["PUBLIC_INDEX"]
INTERNAL_INDEX = CONFIG["LINKS"]["INTERNAL_INDEX"]
GERRIT = CONFIG["LINKS"]["GERRIT"]
GERRIT_SSH = CONFIG["LINKS"]["GERRIT_SSH"]
GERRIT_HTTP = CONFIG["LINKS"]["GERRIT_HTTP"]
TEST_PROJECTS = dict(CONFIG.items('TEST_PROJECTS'))
EXT_PROJ_CFG_FILENAME = CONFIG["TESTRUNNER_PROJECT"]["filename"]
EXT_PROJ_DIRMAP = CONFIG["TESTRUNNER_PROJECT"]["section_dirmap"]
EXT_PROJ_TESTLINK = CONFIG["TESTRUNNER_PROJECT"]["section_testlink"]
TESTLINK_API_URL = CONFIG["TESTLINK"]["API_URL"]
TESTLINK_API_DEVKEY = CONFIG["TESTLINK"]["API_DEVKEY"]

# configuration assert
assert GERRIT[-1] != "/", \
    "Trailing \"/\" in variable GERRIT not allowed! Please remove."

# misc
# Font: Standard
# http://patorjk.com/software/taag/
ART = r"""
           _____         _     ____                              
          |_   _|__  ___| |_  |  _ \ _   _ _ __  _ __   ___ _ __ 
            | |/ _ \/ __| __| | |_) | | | | '_ \| '_ \ / _ \ '__|
            | |  __/\__ \ |_  |  _ <| |_| | | | | | | |  __/ |   
            |_|\___||___/\__| |_| \_\\__,_|_| |_|_| |_|\___|_|   
"""
