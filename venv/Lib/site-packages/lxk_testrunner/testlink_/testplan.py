"""
TestLink Application Module: Testplan Helper
"""

import logging
from lxk_testrunner.testlink_.testlink_ import TestLink

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

def get_testcases(testplan_name, project_name, execution_type):
    """
    Testplan Helper Class
    """
    LOGGER.debug(testplan_name)
    LOGGER.debug(project_name)
    LOGGER.debug(execution_type)
    assert isinstance(testplan_name, str), "must be {type_}".format(type_=str)
    assert isinstance(project_name, str), "must be {type_}".format(type_=str)
    assert isinstance(execution_type, str), "must be {type_}".format(type_=str)

    # connect to tcm
    tcm = TestLink()
    tcm.connect()
    testcases = []

    # get testplan from TestLink
    testplan = tcm.get_testplan(project_name, testplan_name)
    if testplan is None:
        LOGGER.error(
            "ERROR: "
            "Testplan name <%s> does not exist in TestLink. ",
            testplan_name
        )
        return testcases

    # get testcases from Testplan; can be empty
    testcases = tcm.get_testplan_testcases(testplan["id"], execution_type)
    testcases = [testcases[tc][0]["full_external_id"] for tc in testcases]
    LOGGER.debug(testcases)
    return testcases
