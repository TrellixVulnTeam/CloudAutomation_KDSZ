""" Subprocess functions
"""

import os
import logging
from subprocess import check_output, CalledProcessError

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

def execute(cmd, stderr=None):
    """
    Execute system command/program/binary
    """
    LOGGER.debug(cmd)
    assert isinstance(cmd, list), "must be {type_}".format(type_=list)
    output = check_output(cmd, stderr=stderr)
    LOGGER.debug(output)
    output = output.decode("utf-8") if isinstance(output, bytes) else output
    return output

def walk(directory, depth=1):
    """ Strict level/depth os walk """
    LOGGER.debug(directory)
    LOGGER.debug(depth)
    assert os.path.isdir(directory), "{path} does not exist!".\
        format(path=directory)

    reference = depth + directory.count(os.path.sep)
    for path, dirs, files in os.walk(directory):
        level = path.count(os.path.sep)
        if level == reference:
            LOGGER.debug(path)
            LOGGER.debug(dirs)
            LOGGER.debug(files)
            yield path, dirs, files
