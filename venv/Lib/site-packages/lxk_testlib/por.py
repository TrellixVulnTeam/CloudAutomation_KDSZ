"""
POR Module
==========

This module uses ssh to access the available printer
por keys.
"""

import logging
from lxk_testlib.utils import ssh

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

def clear(ip_address):
    """
    Clear any set sticky POR keys.

    :Parameters:
        1. ip_address = Printer IPv4 Address
    """
    por_cmd = "/usr/bin/porkeys -c && sync"
    LOGGER.debug(por_cmd)
    return ssh.execute(ip_address, por_cmd)

def set_value(ip_address, por_key):
    """
    Set the named POR key as sticky.
    This will result in the POR key being active across reboots until cleared.

    :Parameters:
        1. ip_address = Printer IPv4 Address
        2. por_key    = POR key values (engineless, disable_scanner)
                        to check what por keys the printer currently have.. "ls /run/porkeys/"
    """
    por_cmd = "/usr/bin/porkeys -s {key} && sync".format(
        key=por_key
    )
    LOGGER.debug(por_cmd)
    return ssh.execute(ip_address, por_cmd)

if __name__=='__main__':
    # setup paramiko logger
    import os
    from paramiko import util
    util.log_to_file(os.path.join(os.getcwd(), "logs", "paramiko.log"))

    # create logger
    from lxk_testlib.utils import logger
    logger.create(
        name=__name__,
        filename="por.log",
        path=os.path.join(os.getcwd(), "logs")
    )

    host = '10.194.6.236'
    result1 = clear(host)
    print(result1[1])
    print(result1[0])

    result2 = set_value(host, 5)
    print('\n')
    print(result2[1])
    print(result2[0])