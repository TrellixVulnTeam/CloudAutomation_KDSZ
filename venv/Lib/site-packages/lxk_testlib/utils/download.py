"""
Download Utility Functions
================

Functions for downloading file using urlretrieve
or other specific download functions
"""

import sys
import time
import urllib3
import logging
from urllib.request import urlretrieve
from urllib.error import URLError, HTTPError

LOGGER = logging.getLogger(__name__)
LOGGER.setLevel(logging.DEBUG)

START_TIME = 0

def get_file(url, dest_folder):
    """
    Retrieves file from url
    :Parameters:
        1. url         = full url of the location where to download the file
        2. dest_folder = full path of the destination folder where to
                         save the downloaded file

    :Returns: (tuple)
        1. Standard output
        2. Boolean, execution status

    :Examples:
        1. Execute and get output
            >>> from lxk_testlib.utils import download
            >>> url = "http://releases.lrdc.lexmark.com/Palazzo/PP.030.018/combo-g2-perf-PP.030.020.fls"
            >>> output = download._get_file(url, "test.fls")
            >>> print(output[0])

        2. Execute and catch errors
            >>> from lxk_testlib.utils.import system
            >>> url = "http://releases.lrdc.lexmark.com/Palazzo/PP.030.018/combo-g2-perf-PP.030.020.fls"
            >>> output = _get_file(url, "test.fls")
            >>> if output[1] is True:
            ...     print(True)
            ... else:
            ...     print(False)
    """
    LOGGER.debug(url)
    result = None
    status = False

    if url.startswith("https"):
        urllib3.disable_warnings()
        try:
            with urllib3.PoolManager() as http:
                r = http.request('GET', url)
                with open(dest_folder, 'wb') as fout:
                    fout.write(r.data)
            status = True
        except Exception as ex:
            status = False
            result = 'Error Reason: {reason}'.format(reason=ex)
    else:
        try:
            result = urlretrieve(url, dest_folder, _urlretrieve_hook)
            status = True
        except HTTPError as e:
            result = 'Error code: {code} Reason: {reason}'.format(
                code=e.code, reason=e.reason
            )
        except URLError as e:
            result = 'Error Reason: {reason}'.format(reason=e.reason)

        LOGGER.debug(result)

    return status, result

def _urlretrieve_hook(count, block_size, total_size):
    start_time = START_TIME
    if count == 0:
        start_time = time.time()
        return
    duration = time.time() - start_time
    progress_size = int(count * block_size)
    speed = int(progress_size / (1024 * duration))
    percent = min(int(count * block_size*100 / total_size),100)
    sys.stdout.write("\r...%d%%, %d MB, %d KB/s, %d seconds passed" %
                    (percent, progress_size / (1024 * 1024), speed, duration))
    sys.stdout.flush()

if __name__ == "__main__":

    # create logger
    import os
    from lxk_testlib.utils import logger
    logger.create(
        name=__name__,
        filename="download.log",
        path=os.path.join(os.getcwd(), 'logs')
    )

    url = "http://10.194.6.236/webservices/automation/data/panel.xml"
    output = get_file(url, "test.xml")
    print(output[0])

    output = get_file(url, "test.xml")
    if output[1] is True:
        print(True)
    else:
        print(False)