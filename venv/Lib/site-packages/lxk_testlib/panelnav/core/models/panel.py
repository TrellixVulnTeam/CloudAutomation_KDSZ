""" Panel Model
"""

from .screen import Screen

class Panel:
    """ Panel Object
    """

    def __init__(self, home):
        self._home = home
        self._traversal = []

    def __repr__(self):
        return str(self.screen)

    def reset_traversal(self):
        """ Reset traversal path back to home
        """
        assert isinstance(self._home, Screen)
        self._traversal = [self._home]

    def traverse_forward(self, locator_name):
        """ Append locator next screen to traversal path list or load popup
        screen to panel (making it visible).
        """
        locator = self.screen.get_locator(name=locator_name)
        # next_screen and popup_screen are mutually exclusive
        if locator.next_screen:
            self.screen.loaded_popup = None
            self._traversal.append(locator.next_screen)
        elif locator.popup_screen:
            self.screen.loaded_popup = locator.popup_screen

    def traverse_backward(self):
        """ Delete last locator in traversal path list
        """
        if len(self._traversal) > 1:
            del self._traversal[-1]

    @property
    def screen(self):
        """ Return last locator in traversal path list
        """
        return self._traversal[-1]
