""" Panel Navigation Exceptions
"""

class LocatorNotImplemented(Exception):
    """ Custom Panel Navigation Exception

        Exception is thrown when a locator could not be found
        in the specific panel screen locator tree.
    """
    def __init__(self, expression):
        self.expression = expression

class AutomationWebserviceError(Exception):
    """ Custom Panel Navigation Exception

        Exception is thrown when panel automation web services
        issue occurs. This resulted to panel xml not readily available
        for automation.
    """
    def __init__(self, expression, message):
        self.expression = expression
        self.message = message

class ActionArgumentsCountMismatch(Exception):
    """ Custom Panel Navigation Exception

        The exception is associated with python's TypeError exception handling.
        This is thrown when an operation or function is applied to an object
        of an inappropriate type. ValueError is thrown when a function's
        argument is of an inappropriate type.

        Exception generally occurs on actions such as:
        1. `TouchPress`
        2. `GenericReturn`
        3. `GenericPresetSelect`
        4. `GenericVerify`
        5. `NonTouchVerifyWidgetCount`
        6. `GenericWaitUntilNotFound`
    """
    def __init__(self, message):
        self.message = message

class LocatorActionSpecifierRequired(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when `specifier` attribute was not
        defined on the specific locator variable add_action method.
        Example:
            locator.add_action(
                    action=Action.VERIFY,
                    specifier="verify text='%s'"
                )

        Exception generally occurs on actions such as:
        1. `GenericPresetSelect`
        2. `GenericVerify`
    """
    def __init__(self, message):
        self.message = message

class ActionNotImplemented(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when the particular action is not
        defined or not supported for the specific panel size.
        The main reason could be is that the action is not supported
        with the core UPS library.
        To validate, see UPS Rules in Different Panel Sizes:
        https://lexmarkad.sharepoint.com/:x:/s/ToolsAutomationScrum/EX3E3SYhnFNGkK2WmbGq1Z0BwrSyUvy7hMg-KqbzwSeQQg?e=J0awkm

        Note:
        Contact Tools Team, for help in supporting the action
        for the particular panel size.
    """
    def __init__(self, expression):
        self.expression = expression

class MultipleMarkerError(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when multiple `marker` attribute is
        added in the panel screen locator file.

        Example:
        locator = screen.add_locator("USB Drive Screen Title", marker=True)
        locator.area = "resource-id='android:id/action_bar'"
        locator.widget = "resource-id='android:id/action_bar_title'"

        locator = screen.add_locator("USB Drive List Title", marker=True)
        locator.area = "resource-id='com.lxk.JobQueue:id/breadcrumb'"
        locator.widget = "text='USB Drive' && class='android.widget.TextView'"
    """
    def __init__(self, message):
        self.message = message

class MutuallyExclusivePropertyError(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown during setting next_screen
        or popup_screen attributes.

        On setting `next_screen`, execption occurs when locator.popup_screen was already set.
        On setting `popup_screen`, execption occurs when locator.next_screen was already set.
    """
    def __init__(self, message):
        self.message = message

class PopupScreenPropertyError(Exception):
    """ Custom Panel Navigation Exception

        Note: Currently not implemented.
    """
    def __init__(self, message):
        self.message = message

class PanelSizeNotSupported(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown during initializing locators for
        panel navigation.
        Exception happens when the `PanelSize` argument does not
        belong to the list of accepted panel sizes.

        Please see enum file `PanelSize` for the definition of accepted panel sizes.
    """
    def __init__(self, expression):
        self.expression = expression

class PanelNavigationNotInitialized(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when running panel navigation keywords
        without initializing the library first.

        To fix:
        Add keyword `Initialize Panel Navigation` in pre-setup
    """
    def __init__(self, expression):
        self.expression = expression

class LocatorTextWidgetNotVariable(Exception):
    """ Custom Panel Navigation Exception

        This exception occurs when Panel navigation keyword argument `vtext`
        is given and neither locator.text nor locator.widget does not contain "%s".

        Example (Locator Format):
        locator = screen.add_locator("Copy Setting List")
        locator.area = "android.widget.ExpandableListView"
        locator.text = "Content Type"
        locator.widget = "resource-id='com.lxk.adminSettings:id/settings_label'"

        Erroneous Robot Step:
        Press Panel Locator | vtext=Copy Settings List

        Correct Usage:
        Press Panel Locator | Copy Settings List
    """
    def __init__(self, expression):
        self.expression = expression

class KeywordArgVTextRequired(Exception):
    """ Custom Panel Navigation Exception

        This exception occurs when Pnel navigation keyword argument `vtext` is
        not given and locator.text or locator.widget contains "%s"

        Example (Locator Format):
        locator = screen.add_locator("Edit Dialog Button")
        locator.area = "resource-id='android:id/customPanel'"
        locator.widget = "text='%s' && class='android.widget.Button'"

        Correct Usage:
        Press Panel Locator | Edit Dialog Button | vtext=Settings_Component11
    """
    def __init__(self, expression):
        self.expression = expression

class NextScreenMarkerError(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when a locator for `next_screen` property
        was defined with `marker` attribute.

        Locator error definition (Example):
        locator = screen.add_locator("Address Book", marker=True)
        locator.area = "ViewPager"
        locator.widget = "text-id='TXT_ADDRESS_BOOK'"
        locator.next_screen = "%s"
    """
    def __init__(self, expression):
        self.expression = expression

class LocatorTextWidgetMutExclusive(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when panel navigation keyword argument vtext
        is given and both locator.text and locator.widget contains.

        Locator error definition (Example):
        locator = screen.add_locator("Copy Setting List")
        locator.area = "android.widget.ExpandableListView"
        locator.text = "%s"
        locator.widget = "text='%s' && resource-id='com.lxk.adminSettings:id/settings_label'"

        Erroneous Robot Step Definition:
        Press Panel Locator | Copy Setting List | Settings_Component11 | vtext=Settings_Component11
    """
    def __init__(self, expression):
        self.expression = expression

class MultiLocatorVarTextError(Exception):
    """ Custom Panel Navigation Exception

        This exception is thrown when panel navigation locator
        contains multiple %s in locator.widget

        Locator error definition (Example):
        locator = screen.add_locator("Copy Setting List")
        locator.area = "android.widget.ExpandableListView"
        locator.widget = "text='%s' && resource-id='%s'"
    """
    def __init__(self, message):
        self.message = message

class StringsLookupTypeError(Exception):
    """ Custom Panel Navigation Exception

        This exception occurs during setting of strings lookup in dictionary.
        Upon generation of UPS action phrase, if string lookup string is available,
        get the string and substitute it to vtext attribute.
        When a string is not found, exception occurs.
    """
    def __init__(self, message):
        self.message = message